Assignment 18: Basic Programming in C# (OOP 1)

Part 1: Using Generics
1. Create a class GameContainer<T>:
â—‹ This class can store one item of any type 
(like a number or a string).
â—‹ Add a method SetItem(T item) to save an item in the GameContainer.
â—‹ Add another method GetItem() to return the saved item.
2. Create a class GameUtils:
â—‹ Add a static method DescribeItem<T>(T something) that returns a
description of something as a string. Simply add the string 
"This item is "
before the itemâ€™s value.
Example: "This item is a Health Potion."

3. Create a script GenericsTest that inherits from MonoBehaviour:
â—‹ In the Start() method:
â–  Create a GameContainer<string> and store "Healing Potion".
Use GetItem() to log the saved item.
â–  Use DescribeItem<T>() to describe the saved item and log the
description.

Expected Results Part 1 in Unity Console:
Stored item: Healing Potion
This item is a Healing Potion

Part 2: Using Lists and Operator Overloading
1. Create a class Inventory:
â—‹ Inside this class:
â–  Create a private List<string> to store item names.
â–  Add a method AddItem(string item) to add an item 
to the list.
â–  Add a method ShowItems() to log all items in the
 inventory.

2. Overload the + operator:
â—‹ This should combine two Inventory objects
 into one, containing all items from
both (duplicates are allowed).

3. Test Your Code:
â—‹ Create a script GameInventory that 
inherits from MonoBehaviour.
â—‹ In the Start() method:
â–  Create an inventory for potions 
and add "Healing Potion" and
"Strength Potion".
â–  Create another inventory for 
elixirs and add "Elixir" and "Dark
Elixir".
â–  Combine both inventories
 using the + operator.
â–  Use ShowItems() to display the items
 in the combined inventory.

Expected Results Part 2 in Unity Console:
Healing Potion
Strength Potion
Elixir
Dark Elixir

Push Your Scripts to GitHub and share them in the classroom.
Good luck! ðŸŽ®